{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jonathan/WebstormProjects/jreact/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nvar QRCode = require('qrcode.react');\n\nclass App extends React.Component {\n  constructor(probs) {\n    super(probs);\n    this.state = {\n      invitation_url: '',\n      schema: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    console.log('Success!');\n    axios.post('http://localhost:7080/connections/create-invitation').then(response => this.setState({\n      invitation_url: response.data.invitation_url\n    }));\n  }\n\n  addSchema() {\n    //create Schema\n    const newSchema = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Invitation URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: this.handleClick,\n            children: \"Click Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.invitation_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n            value: this.state.invitation_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Create Schema: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"schema\",\n            type: \"text\",\n            id: \"normal\",\n            name: \"ConnID\",\n            value: this.state.schema,\n            onChange: e => this.updateSchema(\"schema\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.addSchema(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jonathan/WebstormProjects/jreact/src/App.js"],"names":["React","Component","axios","QRCode","require","App","constructor","probs","state","invitation_url","schema","handleClick","bind","console","log","post","then","response","setState","data","addSchema","newSchema","render","e","updateSchema","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,cAAD,CAApB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACC,SAAxB,CAAkC;AAC9BK,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,MAAM,EAAC;AAFE,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,GAAI;AACXE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAZ,IAAAA,KAAK,CAACa,IAAN,CAAW,qDAAX,EAAkEC,IAAlE,CAAuEC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAACT,MAAAA,cAAc,EAAEQ,QAAQ,CAACE,IAAT,CAAcV;AAA/B,KAAd,CAAnF;AACH;;AAEDW,EAAAA,SAAS,GAAI;AACT;AACA,UAAMC,SAAS,GAAC,EAAhB;AAGH;;AAEHC,EAAAA,MAAM,GAAI;AACR,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEE;AAAQ,YAAA,SAAS,EAAC,QAAlB;AAA2B,YAAA,OAAO,EAAE,KAAKX,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKI;AAAA,sBAAI,KAAKH,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AAAO,YAAA,SAAS,EAAC,QAAjB;AACO,YAAA,IAAI,EAAE,MADb;AAEO,YAAA,EAAE,EAAC,QAFV;AAEmB,YAAA,IAAI,EAAC,QAFxB;AAGO,YAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,MAHzB;AAIO,YAAA,QAAQ,EAAEa,CAAC,IAAI,KAAKC,YAAL,CAAkB,QAAlB,EAA4BD,CAAC,CAACE,MAAF,CAASC,KAArC;AAJtB;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAgBI;AACI,YAAA,OAAO,EAAE,MAAM,KAAKN,SAAL,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BD;;AAnD+B;;AAqDlC,eAAgBf,GAAhB","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport axios from 'axios'\nvar QRCode = require('qrcode.react');\n\nclass App extends React.Component {\n    constructor (probs) {\n        super(probs)\n        this.state = {\n            invitation_url: '',\n            schema:''\n        }\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick () {\n        console.log('Success!')\n        axios.post('http://localhost:7080/connections/create-invitation').then(response => this.setState({invitation_url: response.data.invitation_url}))\n    }\n\n    addSchema () {\n        //create Schema\n        const newSchema={\n            \n        }\n    }\n\n  render () {\n    return (\n        <body>\n            <div className='App'>\n                <div className='button__container'>\n                    <h2> Invitation URL:</h2>\n                  <button className='button' onClick={this.handleClick}>\n                      Click Me\n                  </button>\n                    <p>{this.state.invitation_url}</p>\n                    <QRCode value={this.state.invitation_url}/>\n\n                    <h2> Create Schema: </h2>\n                    <br/>\n                    <input className=\"schema\"\n                           type= \"text\"\n                           id=\"normal\" name=\"ConnID\"\n                           value={this.state.schema}\n                           onChange={e => this.updateSchema(\"schema\", e.target.value)}\n                    />\n                    <button\n                        onClick={() => this.addSchema()}>\n                        Add\n                    </button>\n                </div>\n            </div>\n        </body>\n    )\n  }\n}\nexport default (App)"]},"metadata":{},"sourceType":"module"}